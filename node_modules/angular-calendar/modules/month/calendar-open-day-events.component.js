import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';
import { trigger, style, transition, animate } from '@angular/animations';
import { trackByEventId } from '../common/util';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'angular-draggable-droppable';
import * as ɵngcc3 from '../common/calendar-event-title.component';
import * as ɵngcc4 from '../common/click.directive';
import * as ɵngcc5 from '../common/calendar-event-actions.component';

var _c0 = function (a0) { return { event: a0 }; };
var _c1 = function (a0, a1) { return { x: a0, y: a1 }; };
function CalendarOpenDayEventsComponent_ng_template_0_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵelement(1, "span", 4);
    ɵngcc0.ɵɵtext(2, " ");
    ɵngcc0.ɵɵelementStart(3, "mwl-calendar-event-title", 5);
    ɵngcc0.ɵɵlistener("mwlClick", function CalendarOpenDayEventsComponent_ng_template_0_div_0_Template_mwl_calendar_event_title_mwlClick_3_listener() { ɵngcc0.ɵɵrestoreView(_r9); var event_r6 = ctx.$implicit; var eventClicked_r4 = ɵngcc0.ɵɵnextContext().eventClicked; return eventClicked_r4.emit({ event: event_r6 }); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, " ");
    ɵngcc0.ɵɵelement(5, "mwl-calendar-event-actions", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var event_r6 = ctx.$implicit;
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", event_r6 == null ? null : event_r6.cssClass)("dropData", ɵngcc0.ɵɵpureFunction1(8, _c0, event_r6))("dragAxis", ɵngcc0.ɵɵpureFunction2(10, _c1, event_r6.draggable, event_r6.draggable));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("background-color", event_r6.color == null ? null : event_r6.color.primary);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("event", event_r6)("customTemplate", ctx_r5.eventTitleTemplate);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("event", event_r6);
} }
function CalendarOpenDayEventsComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, CalendarOpenDayEventsComponent_ng_template_0_div_0_Template, 6, 13, "div", 2);
} if (rf & 2) {
    var events_r3 = ctx.events;
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngForOf", events_r3)("ngForTrackBy", ctx_r1.trackByEventId);
} }
function CalendarOpenDayEventsComponent_div_2_ng_template_1_Template(rf, ctx) { }
var _c2 = function (a0, a1) { return { events: a0, eventClicked: a1 }; };
function CalendarOpenDayEventsComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵtemplate(1, CalendarOpenDayEventsComponent_div_2_ng_template_1_Template, 0, 0, "ng-template", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    var _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵproperty("@collapse", undefined);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.customTemplate || _r0)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx_r2.events, ctx_r2.eventClicked));
} }
var CalendarOpenDayEventsComponent = /** @class */ (function () {
    function CalendarOpenDayEventsComponent() {
        this.isOpen = false;
        this.eventClicked = new EventEmitter();
        this.trackByEventId = trackByEventId;
    }
    /** @nocollapse */
    CalendarOpenDayEventsComponent.propDecorators = {
        "isOpen": [{ type: Input },],
        "events": [{ type: Input },],
        "customTemplate": [{ type: Input },],
        "eventTitleTemplate": [{ type: Input },],
        "eventClicked": [{ type: Output },],
    };
CalendarOpenDayEventsComponent.ɵfac = function CalendarOpenDayEventsComponent_Factory(t) { return new (t || CalendarOpenDayEventsComponent)(); };
CalendarOpenDayEventsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CalendarOpenDayEventsComponent, selectors: [["mwl-calendar-open-day-events"]], inputs: { isOpen: "isOpen", events: "events", customTemplate: "customTemplate", eventTitleTemplate: "eventTitleTemplate" }, outputs: { eventClicked: "eventClicked" }, decls: 3, vars: 1, consts: [["defaultTemplate", ""], ["class", "cal-open-day-events", 4, "ngIf"], ["mwlDraggable", "", 3, "ngClass", "dropData", "dragAxis", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["mwlDraggable", "", 3, "ngClass", "dropData", "dragAxis"], [1, "cal-event"], ["view", "month", 3, "event", "customTemplate", "mwlClick"], [3, "event"], [1, "cal-open-day-events"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function CalendarOpenDayEventsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, CalendarOpenDayEventsComponent_ng_template_0_Template, 1, 2, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(2, CalendarOpenDayEventsComponent_div_2_Template, 2, 6, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isOpen);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.ɵa, ɵngcc1.NgClass, ɵngcc3.CalendarEventTitleComponent, ɵngcc4.ClickDirective, ɵngcc5.CalendarEventActionsComponent, ɵngcc1.NgTemplateOutlet], encapsulation: 2, data: { animation: [
            trigger('collapse', [
                transition('void => *', [
                    style({ height: 0, overflow: 'hidden' }),
                    animate('150ms', style({ height: '*' }))
                ]),
                transition('* => void', [
                    style({ height: '*', overflow: 'hidden' }),
                    animate('150ms', style({ height: 0 }))
                ])
            ])
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarOpenDayEventsComponent, [{
        type: Component,
        args: [{
                selector: 'mwl-calendar-open-day-events',
                template: "\n    <ng-template\n      #defaultTemplate\n      let-events=\"events\"\n      let-eventClicked=\"eventClicked\">\n      <div\n        *ngFor=\"let event of events; trackBy:trackByEventId\"\n        [ngClass]=\"event?.cssClass\"\n        mwlDraggable\n        [dropData]=\"{event: event}\"\n        [dragAxis]=\"{x: event.draggable, y: event.draggable}\">\n        <span\n          class=\"cal-event\"\n          [style.backgroundColor]=\"event.color?.primary\">\n        </span>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"month\"\n          (mwlClick)=\"eventClicked.emit({event: event})\">\n        </mwl-calendar-event-title>\n        &ngsp;\n        <mwl-calendar-event-actions [event]=\"event\"></mwl-calendar-event-actions>\n      </div>\n    </ng-template>\n    <div class=\"cal-open-day-events\" [@collapse] *ngIf=\"isOpen\">\n      <ng-template\n        [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n        [ngTemplateOutletContext]=\"{\n          events: events,\n          eventClicked: eventClicked\n        }\">\n      </ng-template>\n    </div>\n  ",
                animations: [
                    trigger('collapse', [
                        transition('void => *', [
                            style({ height: 0, overflow: 'hidden' }),
                            animate('150ms', style({ height: '*' }))
                        ]),
                        transition('* => void', [
                            style({ height: '*', overflow: 'hidden' }),
                            animate('150ms', style({ height: 0 }))
                        ])
                    ])
                ]
            }]
    }], function () { return []; }, { isOpen: [{
            type: Input
        }], eventClicked: [{
            type: Output
        }], events: [{
            type: Input
        }], customTemplate: [{
            type: Input
        }], eventTitleTemplate: [{
            type: Input
        }] }); })();
    return CalendarOpenDayEventsComponent;
}());
export { CalendarOpenDayEventsComponent };

//# sourceMappingURL=calendar-open-day-events.component.js.map