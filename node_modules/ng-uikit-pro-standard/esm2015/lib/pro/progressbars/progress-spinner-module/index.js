import { NgModule } from '@angular/core';
import { MdProgressSpinnerComponent, MdSpinnerComponent, MdProgressSpinnerCssMatStylerDirective, } from './progress-spinner.component';
import { ProgressSpinnerComponent } from '../progress-spinner.component';
import * as ɵngcc0 from '@angular/core';
class MdProgressSpinnerModule {
    static forRoot() {
        return {
            ngModule: MdProgressSpinnerModule,
            providers: [],
        };
    }
}
MdProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MdProgressSpinnerModule });
MdProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MdProgressSpinnerModule_Factory(t) { return new (t || MdProgressSpinnerModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdProgressSpinnerModule, { declarations: function () { return [MdProgressSpinnerComponent,
        MdSpinnerComponent,
        MdProgressSpinnerCssMatStylerDirective,
        ProgressSpinnerComponent]; }, exports: function () { return [MdProgressSpinnerComponent,
        MdSpinnerComponent,
        MdProgressSpinnerCssMatStylerDirective,
        ProgressSpinnerComponent]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MdProgressSpinnerModule, [{
        type: NgModule,
        args: [{
                exports: [
                    MdProgressSpinnerComponent,
                    MdSpinnerComponent,
                    MdProgressSpinnerCssMatStylerDirective,
                    ProgressSpinnerComponent,
                ],
                declarations: [
                    MdProgressSpinnerComponent,
                    MdSpinnerComponent,
                    MdProgressSpinnerCssMatStylerDirective,
                    ProgressSpinnerComponent,
                ]
            }]
    }], null, null); })();
export { MdProgressSpinnerModule };
export { MdProgressSpinnerCssMatStylerDirective, MdProgressSpinnerComponent, MdSpinnerComponent, } from './progress-spinner.component';

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLXVpa2l0LXByby1zdGFuZGFyZC9zcmMvbGliL3Byby9wcm9ncmVzc2JhcnMvcHJvZ3Jlc3Mtc3Bpbm5lci1tb2R1bGUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUNMLDBCQUEwQixFQUMxQixrQkFBa0IsRUFDbEIsc0NBQXNDLEdBQ3ZDLE1BQU0sOEJBQThCLENBQUM7QUFFdEMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7O0FBRXpFLE1BY00sdUJBQXVCO0FBQzdCLElBQUUsTUFBTSxDQUFDLE9BQU87QUFBSyxRQUNqQixPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsdUJBQXVCO0FBQ3ZDLFlBQU0sU0FBUyxFQUFFLEVBQUU7QUFDbkIsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0g7bURBckJDLFFBQVEsU0FBQyxrQkFDUjtFQUFPLEVBQUUsc0JBQ1AsMEJBQTBCLHNCQUMxQixrQkFBa0Isc0JBQ2xCLHNDQUFzQztXQUN0Qyx3QkFBd0IsbUJBQ3pCLGtCQUNELFlBQVksRUFBRSxzQkFDWiwwQkFBMEIsc0JBQzFCLGtCQUFrQjthQUNsQjt1QkFBc0Msc0JBQ3RDO3FCQUF3QixtQkFDekIsZUFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFTTCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsQ0FBQztBQUNuQyxPQUFPLEVBRUwsc0NBQXNDLEVBQ3RDLDBCQUEwQixFQUMxQixrQkFBa0IsR0FDbkIsTUFBTSw4QkFBOEIsQ0FBQztBQUN0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBNZFByb2dyZXNzU3Bpbm5lckNvbXBvbmVudCxcbiAgTWRTcGlubmVyQ29tcG9uZW50LFxuICBNZFByb2dyZXNzU3Bpbm5lckNzc01hdFN0eWxlckRpcmVjdGl2ZSxcbn0gZnJvbSAnLi9wcm9ncmVzcy1zcGlubmVyLmNvbXBvbmVudCc7XG5cbmltcG9ydCB7IFByb2dyZXNzU3Bpbm5lckNvbXBvbmVudCB9IGZyb20gJy4uL3Byb2dyZXNzLXNwaW5uZXIuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgZXhwb3J0czogW1xuICAgIE1kUHJvZ3Jlc3NTcGlubmVyQ29tcG9uZW50LFxuICAgIE1kU3Bpbm5lckNvbXBvbmVudCxcbiAgICBNZFByb2dyZXNzU3Bpbm5lckNzc01hdFN0eWxlckRpcmVjdGl2ZSxcbiAgICBQcm9ncmVzc1NwaW5uZXJDb21wb25lbnQsXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE1kUHJvZ3Jlc3NTcGlubmVyQ29tcG9uZW50LFxuICAgIE1kU3Bpbm5lckNvbXBvbmVudCxcbiAgICBNZFByb2dyZXNzU3Bpbm5lckNzc01hdFN0eWxlckRpcmVjdGl2ZSxcbiAgICBQcm9ncmVzc1NwaW5uZXJDb21wb25lbnQsXG4gIF0sXG59KVxuY2xhc3MgTWRQcm9ncmVzc1NwaW5uZXJNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE1kUHJvZ3Jlc3NTcGlubmVyTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBNZFByb2dyZXNzU3Bpbm5lck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW10sXG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgeyBNZFByb2dyZXNzU3Bpbm5lck1vZHVsZSB9O1xuZXhwb3J0IHtcbiAgUHJvZ3Jlc3NTcGlubmVyTW9kZSxcbiAgTWRQcm9ncmVzc1NwaW5uZXJDc3NNYXRTdHlsZXJEaXJlY3RpdmUsXG4gIE1kUHJvZ3Jlc3NTcGlubmVyQ29tcG9uZW50LFxuICBNZFNwaW5uZXJDb21wb25lbnQsXG59IGZyb20gJy4vcHJvZ3Jlc3Mtc3Bpbm5lci5jb21wb25lbnQnO1xuIl19