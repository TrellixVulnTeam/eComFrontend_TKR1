import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { Component, ViewChild, ElementRef, Renderer2, Input, HostListener, forwardRef, Output, EventEmitter, ChangeDetectorRef, ViewEncapsulation, ChangeDetectionStrategy, } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';

const _c0 = ["input"];
const _c1 = ["rangeCloud"];
const _c2 = ["rangeField"];
const _c3 = function (a0) { return { visible: a0 }; };
function MdbRangeInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 2, 3);
    ɵngcc0.ɵɵelementStart(2, "div", 4);
    ɵngcc0.ɵɵelementStart(3, "div", 5, 6);
    ɵngcc0.ɵɵelementStart(5, "span", 7);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "input", 8, 9);
    ɵngcc0.ɵɵlistener("ngModelChange", function MdbRangeInputComponent_div_0_Template_input_ngModelChange_7_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.range = $event; })("input", function MdbRangeInputComponent_div_0_Template_input_input_7_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.coverage($event); })("mousedown", function MdbRangeInputComponent_div_0_Template_input_mousedown_7_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.focusRangeInput(); })("mouseup", function MdbRangeInputComponent_div_0_Template_input_mouseup_7_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.blurRangeInput(); })("touchstart", function MdbRangeInputComponent_div_0_Template_input_touchstart_7_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.focusRangeInput(); })("touchend", function MdbRangeInputComponent_div_0_Template_input_touchend_7_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.blurRangeInput(); })("blur", function MdbRangeInputComponent_div_0_Template_input_blur_7_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.blurRangeInput(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(10, _c3, ctx_r0.visibility));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.range);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("name", ctx_r0.name)("disabled", ctx_r0.disabled)("id", ctx_r0.id)("min", ctx_r0.min)("max", ctx_r0.max)("step", ctx_r0.step)("value", ctx_r0.value)("ngModel", ctx_r0.range);
} }
function MdbRangeInputComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "input", 10, 9);
    ɵngcc0.ɵɵlistener("ngModelChange", function MdbRangeInputComponent_div_1_Template_input_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.range = $event; })("input", function MdbRangeInputComponent_div_1_Template_input_input_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.coverage($event); })("mousedown", function MdbRangeInputComponent_div_1_Template_input_mousedown_1_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.focusRangeInput(); })("mouseup", function MdbRangeInputComponent_div_1_Template_input_mouseup_1_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.blurRangeInput(); })("touchstart", function MdbRangeInputComponent_div_1_Template_input_touchstart_1_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.focusRangeInput(); })("touchend", function MdbRangeInputComponent_div_1_Template_input_touchend_1_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.blurRangeInput(); })("blur", function MdbRangeInputComponent_div_1_Template_input_blur_1_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.blurRangeInput(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("name", ctx_r1.name)("id", ctx_r1.id)("min", ctx_r1.min)("max", ctx_r1.max)("step", ctx_r1.step)("value", ctx_r1.value)("ngModel", ctx_r1.range);
    ɵngcc0.ɵɵattribute("value", ctx_r1.value);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.defaultRangeCounterClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.range);
} }
export const RANGE_VALUE_ACCESOR = {
    provide: NG_VALUE_ACCESSOR,
    // tslint:disable-next-line: no-use-before-declare
    useExisting: forwardRef(() => MdbRangeInputComponent),
    multi: true,
};
export class MdbRangeInputComponent {
    // @HostListener('mousedown') onclick() {
    //   this.focusRangeInput();
    // }
    // @HostListener('touchstart') onTouchStart() {
    //   this.focusRangeInput();
    // }
    // @HostListener('mouseup') onmouseup() {
    //   this.blurRangeInput();
    // }
    constructor(renderer, cdRef) {
        this.renderer = renderer;
        this.cdRef = cdRef;
        this.min = 0;
        this.max = 100;
        this.rangeValueChange = new EventEmitter();
        this.range = 0;
        this.cloudRange = 0;
        this.visibility = false;
        // Control Value Accessor Methods
        this.onChange = (_) => { };
        this.onTouched = () => { };
    }
    onchange(event) {
        this.onChange(event.target.value);
    }
    oninput(event) {
        const value = +event.target.value;
        this.rangeValueChange.emit({ value: value });
        this.focusRangeInput();
        if (this.checkIfSafari()) {
            this.focusRangeInput();
        }
    }
    focusRangeInput() {
        // this.input.nativeElement.focus();
        this.visibility = true;
    }
    blurRangeInput() {
        this.input.nativeElement.blur();
        this.visibility = false;
    }
    coverage(event, value) {
        if (typeof this.range === 'string' && this.range.length !== 0) {
            return this.range;
        }
        if (!this.default) {
            // if `coverage()` is called by (input) event take value as event.target.value. If it's called manually, take value from parameter.
            // This is needed in situation, when slider value is set by default or ReactiveForms, and value clound is not moved to proper position
            const newValue = event.target ? event.target.value : value;
            const newRelativeGain = newValue - this.min;
            const inputWidth = this.input.nativeElement.offsetWidth;
            let thumbOffset;
            const offsetAmmount = 15;
            const distanceFromMiddle = newRelativeGain - this.steps / 2;
            this.stepLength = inputWidth / this.steps;
            thumbOffset = (distanceFromMiddle / this.steps) * offsetAmmount;
            this.cloudRange = this.stepLength * newRelativeGain - thumbOffset;
            this.renderer.setStyle(this.rangeCloud.nativeElement, 'left', this.cloudRange + 'px');
        }
    }
    checkIfSafari() {
        const isSafari = navigator.userAgent.indexOf('Safari') > -1;
        const isChrome = navigator.userAgent.indexOf('Chrome') > -1;
        const isFirefox = navigator.userAgent.indexOf('Firefox') > -1;
        const isOpera = navigator.userAgent.indexOf('Opera') > -1;
        if (isSafari && !isChrome && !isFirefox && !isOpera) {
            return true;
        }
        else {
            return false;
        }
    }
    ngAfterViewInit() {
        this.steps = this.max - this.min;
        if (this.value) {
            this.range = Number(this.value);
            // fix(slider): resolve problem with not moving slider cloud when setting value with [value] or reactive forms
            // Manual call the coverage method to move range value cloud to proper position based on the `value` variable
            this.coverage(new Event('input'), this.value);
            this.cdRef.detectChanges();
        }
    }
    writeValue(value) {
        this.value = value;
        this.range = Number(this.value);
        this.cdRef.markForCheck();
        // fix(slider): resolve problem with not moving slider cloud when setting value with [value] or reactive forms
        // Manual call the coverage method to move range value cloud to proper position based on the `value` variable
        setTimeout(() => {
            this.coverage(new Event('input'), value);
        }, 0);
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
}
MdbRangeInputComponent.ɵfac = function MdbRangeInputComponent_Factory(t) { return new (t || MdbRangeInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
MdbRangeInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbRangeInputComponent, selectors: [["mdb-range-input"]], viewQuery: function MdbRangeInputComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 1);
        ɵngcc0.ɵɵviewQuery(_c1, 1);
        ɵngcc0.ɵɵviewQuery(_c2, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rangeCloud = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rangeField = _t.first);
    } }, hostBindings: function MdbRangeInputComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("change", function MdbRangeInputComponent_change_HostBindingHandler($event) { return ctx.onchange($event); })("input", function MdbRangeInputComponent_input_HostBindingHandler($event) { return ctx.oninput($event); });
    } }, inputs: { min: "min", max: "max", value: "value", disabled: "disabled", id: "id", required: "required", name: "name", step: "step", default: "default", defaultRangeCounterClass: "defaultRangeCounterClass" }, outputs: { rangeValueChange: "rangeValueChange" }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_VALUE_ACCESOR])], decls: 2, vars: 2, consts: [["class", "range-field", 4, "ngIf"], [4, "ngIf"], [1, "range-field"], ["rangeField", ""], [1, "track"], ["title", "range", 1, "range-cloud", 3, "ngClass"], ["rangeCloud", ""], [1, "text-transform"], ["type", "range", 3, "name", "disabled", "id", "min", "max", "step", "value", "ngModel", "ngModelChange", "input", "mousedown", "mouseup", "touchstart", "touchend", "blur"], ["input", ""], ["type", "range", 1, "custom-range", 3, "name", "id", "min", "max", "step", "value", "ngModel", "ngModelChange", "input", "mousedown", "mouseup", "touchstart", "touchend", "blur"]], template: function MdbRangeInputComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, MdbRangeInputComponent_div_0_Template, 9, 12, "div", 0);
        ɵngcc0.ɵɵtemplate(1, MdbRangeInputComponent_div_1_Template, 5, 12, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.default);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.default);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc2.RangeValueAccessor, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel], styles: [".range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.range-field input[type=range]:focus{outline:none}.range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;-moz-appearance:none;appearance:none;outline:none}.range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.range-field input[type=range]::-ms-fill-lower,.range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.range-field input[type=range]:focus::-ms-fill-lower,.range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}@supports (--css:variables){input[type=range].mdbMultiRange{padding:0;margin:0;display:inline-block;vertical-align:top;position:absolute;pointer-events:none}input[type=range].mdbMultiRange::-moz-range-thumb{pointer-events:all}input[type=range].mdbMultiRange::-webkit-slider-thumb{pointer-events:all}input[type=range].mdbMultiRange.original{position:absolute}input[type=range].mdbMultiRange.original::-webkit-slider-thumb{position:relative;z-index:2}input[type=range].mdbMultiRange.original::-moz-range-thumb{transform:scale(1);z-index:1}input[type=range].mdbMultiRange.ghost{position:relative}input[type=range].mdbMultiRange.ghost::-moz-range-track{background-color:transparent}}.multi-range-field{position:relative}.multi-range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.multi-range-field input[type=range]:focus{outline:none}.multi-range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.multi-range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.multi-range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.multi-range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.multi-range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.multi-range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.multi-range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;-moz-appearance:none;appearance:none;outline:none}.multi-range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.multi-range-field input[type=range]::-ms-fill-lower,.multi-range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.multi-range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.multi-range-field input[type=range]:focus::-ms-fill-lower,.multi-range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}.thumb-horizontal-wrapper{position:relative;transform:rotate(-270deg);top:500px}.multi-range-field input[type=range]+.thumb-horizontal .value{transform:rotate(315deg)!important}.range-field:focus{box-shadow:none}.range-field:focus::-webkit-slider-thumb{box-shadow:none}.range-field:focus::-moz-range-thumb{box-shadow:none}.range-field:focus::-ms-thumb{box-shadow:none}.range-field::-moz-focus-outer{border:0}.range-field::-webkit-slider-thumb{margin-top:-6px;box-shadow:none;-webkit-appearance:none;appearance:none}.range-field::-webkit-slider-runnable-track{height:4px;border-radius:0}.range-field::-moz-range-thumb{box-shadow:none;-moz-appearance:none;appearance:none}.range-field{position:relative}.range-field .track{position:absolute}.range-field .track .range-cloud{position:absolute;display:block;height:30px;width:30px;top:-32px;margin-left:-15px;text-align:center;border-radius:50% 50% 50% 0;transform:scale(0);transform-origin:bottom;transition:transform .2s ease-in-out}.range-field .track .range-cloud:after{position:absolute;display:block;content:\"\";transform:translateX(-50%);width:100%;height:100%;top:0;border-radius:50% 50% 50% 0;transform:rotate(-45deg);background:#1266f1;z-index:-1}.range-field .track .range-cloud.visible{transform:scale(1)}.range-field .track .range-cloud .text-transform{display:block;font-size:12px;line-height:30px;color:#fff;z-index:2}"], encapsulation: 2, changeDetection: 0 });
MdbRangeInputComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ChangeDetectorRef }
];
MdbRangeInputComponent.propDecorators = {
    input: [{ type: ViewChild, args: ['input',] }],
    rangeCloud: [{ type: ViewChild, args: ['rangeCloud',] }],
    rangeField: [{ type: ViewChild, args: ['rangeField',] }],
    id: [{ type: Input }],
    required: [{ type: Input }],
    name: [{ type: Input }],
    value: [{ type: Input }],
    disabled: [{ type: Input }],
    min: [{ type: Input }],
    max: [{ type: Input }],
    step: [{ type: Input }],
    default: [{ type: Input }],
    defaultRangeCounterClass: [{ type: Input }],
    rangeValueChange: [{ type: Output }],
    onchange: [{ type: HostListener, args: ['change', ['$event'],] }],
    oninput: [{ type: HostListener, args: ['input', ['$event'],] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MdbRangeInputComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-range-input',
                template: "<div *ngIf=\"!default\" class=\"range-field\" #rangeField>\n  <div class=\"track\">\n    <div #rangeCloud class=\"range-cloud\" title=\"range\" [ngClass]=\"{ visible: this.visibility }\">\n      <span class=\"text-transform\">{{ range }}</span>\n    </div>\n  </div>\n  <input\n    #input\n    [name]=\"name\"\n    type=\"range\"\n    [disabled]=\"disabled\"\n    [id]=\"id\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [step]=\"step\"\n    [value]=\"value\"\n    [(ngModel)]=\"range\"\n    (input)=\"coverage($event)\"\n    (mousedown)=\"focusRangeInput()\"\n    (mouseup)=\"blurRangeInput()\"\n    (touchstart)=\"focusRangeInput()\"\n    (touchend)=\"blurRangeInput()\"\n    (blur)=\"blurRangeInput()\"\n  />\n</div>\n\n<div *ngIf=\"default\">\n  <input\n    #input\n    class=\"custom-range\"\n    [name]=\"name\"\n    type=\"range\"\n    [id]=\"id\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [step]=\"step\"\n    [attr.value]=\"value\"\n    [value]=\"value\"\n    [(ngModel)]=\"range\"\n    (input)=\"coverage($event)\"\n    (mousedown)=\"focusRangeInput()\"\n    (mouseup)=\"blurRangeInput()\"\n    (touchstart)=\"focusRangeInput()\"\n    (touchend)=\"blurRangeInput()\"\n    (blur)=\"blurRangeInput()\"\n  />\n  <span class=\"{{ defaultRangeCounterClass }}\">{{ range }}</span>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                providers: [RANGE_VALUE_ACCESOR],
                styles: [".range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.range-field input[type=range]:focus{outline:none}.range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;-moz-appearance:none;appearance:none;outline:none}.range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.range-field input[type=range]::-ms-fill-lower,.range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.range-field input[type=range]:focus::-ms-fill-lower,.range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}@supports (--css:variables){input[type=range].mdbMultiRange{padding:0;margin:0;display:inline-block;vertical-align:top;position:absolute;pointer-events:none}input[type=range].mdbMultiRange::-moz-range-thumb{pointer-events:all}input[type=range].mdbMultiRange::-webkit-slider-thumb{pointer-events:all}input[type=range].mdbMultiRange.original{position:absolute}input[type=range].mdbMultiRange.original::-webkit-slider-thumb{position:relative;z-index:2}input[type=range].mdbMultiRange.original::-moz-range-thumb{transform:scale(1);z-index:1}input[type=range].mdbMultiRange.ghost{position:relative}input[type=range].mdbMultiRange.ghost::-moz-range-track{background-color:transparent}}.multi-range-field{position:relative}.multi-range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.multi-range-field input[type=range]:focus{outline:none}.multi-range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.multi-range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.multi-range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.multi-range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.multi-range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.multi-range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.multi-range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;-moz-appearance:none;appearance:none;outline:none}.multi-range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.multi-range-field input[type=range]::-ms-fill-lower,.multi-range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.multi-range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.multi-range-field input[type=range]:focus::-ms-fill-lower,.multi-range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}.thumb-horizontal-wrapper{position:relative;transform:rotate(-270deg);top:500px}.multi-range-field input[type=range]+.thumb-horizontal .value{transform:rotate(315deg)!important}.range-field:focus{box-shadow:none}.range-field:focus::-webkit-slider-thumb{box-shadow:none}.range-field:focus::-moz-range-thumb{box-shadow:none}.range-field:focus::-ms-thumb{box-shadow:none}.range-field::-moz-focus-outer{border:0}.range-field::-webkit-slider-thumb{margin-top:-6px;box-shadow:none;-webkit-appearance:none;appearance:none}.range-field::-webkit-slider-runnable-track{height:4px;border-radius:0}.range-field::-moz-range-thumb{box-shadow:none;-moz-appearance:none;appearance:none}.range-field{position:relative}.range-field .track{position:absolute}.range-field .track .range-cloud{position:absolute;display:block;height:30px;width:30px;top:-32px;margin-left:-15px;text-align:center;border-radius:50% 50% 50% 0;transform:scale(0);transform-origin:bottom;transition:transform .2s ease-in-out}.range-field .track .range-cloud:after{position:absolute;display:block;content:\"\";transform:translateX(-50%);width:100%;height:100%;top:0;border-radius:50% 50% 50% 0;transform:rotate(-45deg);background:#1266f1;z-index:-1}.range-field .track .range-cloud.visible{transform:scale(1)}.range-field .track .range-cloud .text-transform{display:block;font-size:12px;line-height:30px;color:#fff;z-index:2}"]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { min: [{
            type: Input
        }], max: [{
            type: Input
        }], rangeValueChange: [{
            type: Output
        }], onchange: [{
            type: HostListener,
            args: ['change', ['$event']]
        }], oninput: [{
            type: HostListener,
            args: ['input', ['$event']]
        }], value: [{
            type: Input
        }], disabled: [{
            type: Input
        }], input: [{
            type: ViewChild,
            args: ['input']
        }], rangeCloud: [{
            type: ViewChild,
            args: ['rangeCloud']
        }], rangeField: [{
            type: ViewChild,
            args: ['rangeField']
        }], id: [{
            type: Input
        }], required: [{
            type: Input
        }], name: [{
            type: Input
        }], step: [{
            type: Input
        }], default: [{
            type: Input
        }], defaultRangeCounterClass: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,