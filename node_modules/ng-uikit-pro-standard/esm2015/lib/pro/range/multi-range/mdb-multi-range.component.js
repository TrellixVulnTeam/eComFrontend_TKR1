import { Component, ElementRef, EventEmitter, forwardRef, Input, Output, Renderer2, ViewChild, ViewEncapsulation, ChangeDetectionStrategy, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';

const _c0 = ["firstInput"];
const _c1 = ["secondInput"];
const _c2 = ["firstRangeCloud"];
const _c3 = ["secondRangeCloud"];
const _c4 = ["rangeField"];
const _c5 = function (a0) { return { visible: a0 }; };
export const RANGE_VALUE_ACCESOR = {
    provide: NG_VALUE_ACCESSOR,
    // tslint:disable-next-line: no-use-before-declare
    useExisting: forwardRef(() => MdbMultiRangeInputComponent),
    multi: true,
};
export class MdbMultiRangeInputComponent {
    constructor(renderer) {
        this.renderer = renderer;
        this.value = { first: 0, second: 0 };
        this.min = 0;
        this.max = 100;
        this.rangeValueChange = new EventEmitter();
        this.firstVisibility = false;
        this.secondVisibility = false;
        this.cloudRange = 0;
        // Control Value Accessor Methods
        this.onChange = (_) => { };
        this.onTouched = () => { };
    }
    ngOnInit() {
        this.range = this.value;
    }
    ngAfterViewInit() {
        this.steps = this.max - this.min;
        // fix(slider): resolve problem with not moving slider cloud when setting value with [value] or reactive forms
        // Manual call the moveValueCloud method to move range value cloud to proper position based on the `value` variable
        if (this.value) {
            this.moveValueCloud(new Event('input'), 'first', Number(this.value.first));
            this.moveValueCloud(new Event('input'), 'second', Number(this.value.second));
        }
    }
    firstRangeInput(event) {
        this.rangeValueChange.emit(this.range);
        if (typeof this.range === 'object' && this.range.first === 0) {
            return this.range;
        }
        this.focusRangeInput('first');
        this.moveValueCloud(event, 'first');
    }
    secondRangeInput(event) {
        this.rangeValueChange.emit(this.range);
        if (typeof this.range === 'object' && this.range.second === 0) {
            return this.range;
        }
        this.focusRangeInput('second');
        this.moveValueCloud(event, 'second');
    }
    moveValueCloud(event, element, value) {
        // if `moveValueCloud()` is called by (input) event take value as event.target.value.
        // If it's called manually, take value from parameter.
        // This is needed in situation, when slider value is set by default or ReactiveForms,
        // and value clound is not moved to proper position
        const newValue = event.target ? event.target.value : value;
        const newRelativeGain = newValue - this.min;
        const inputWidth = element === 'first'
            ? this.firstInput.nativeElement.offsetWidth
            : this.secondInput.nativeElement.offsetWidth;
        let thumbOffset = 0;
        const offsetAmmount = 15;
        const distanceFromMiddle = newRelativeGain - this.steps / 2;
        this.stepLength = inputWidth / this.steps;
        thumbOffset = (distanceFromMiddle / this.steps) * offsetAmmount;
        this.cloudRange = this.stepLength * newRelativeGain - thumbOffset;
        this.renderer.setStyle(element === 'first'
            ? this.firstRangeCloud.nativeElement
            : this.secondRangeCloud.nativeElement, 'left', this.cloudRange + 'px');
    }
    focusRangeInput(element) {
        if (this.checkIfSafari()) {
            element === 'first'
                ? this.firstInput.nativeElement.focus()
                : this.secondInput.nativeElement.focus();
        }
        element === 'first' ? (this.firstVisibility = true) : (this.secondVisibility = true);
    }
    blurRangeInput(element) {
        if (this.checkIfSafari()) {
            element === 'first'
                ? this.firstInput.nativeElement.blur()
                : this.secondInput.nativeElement.blur();
        }
        element === 'first' ? (this.firstVisibility = false) : (this.secondVisibility = false);
    }
    checkIfSafari() {
        const isSafari = navigator.userAgent.indexOf('Safari') > -1;
        const isChrome = navigator.userAgent.indexOf('Chrome') > -1;
        const isFirefox = navigator.userAgent.indexOf('Firefox') > -1;
        const isOpera = navigator.userAgent.indexOf('Opera') > -1;
        if (isSafari && !isChrome && !isFirefox && !isOpera) {
            return true;
        }
        else {
            return false;
        }
    }
    writeValue(value) {
        this.value = value;
        this.range = value;
        // fix(slider): resolve problem with not moving slider cloud when setting value with [value] or reactive forms
        // Manual call the moveValueCloud method to move range value cloud to proper position based on the `value` variable
        if (value) {
            setTimeout(() => {
                this.moveValueCloud(new Event('input'), 'first', Number(value.first));
                this.moveValueCloud(new Event('input'), 'second', Number(value.second));
            }, 0);
        }
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
}
MdbMultiRangeInputComponent.ɵfac = function MdbMultiRangeInputComponent_Factory(t) { return new (t || MdbMultiRangeInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
MdbMultiRangeInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbMultiRangeInputComponent, selectors: [["mdb-multi-range-input"]], viewQuery: function MdbMultiRangeInputComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 3);
        ɵngcc0.ɵɵviewQuery(_c1, 3);
        ɵngcc0.ɵɵviewQuery(_c2, 3);
        ɵngcc0.ɵɵviewQuery(_c3, 3);
        ɵngcc0.ɵɵviewQuery(_c4, 3);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.firstInput = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.secondInput = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.firstRangeCloud = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.secondRangeCloud = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rangeField = _t.first);
    } }, inputs: { value: "value", min: "min", max: "max", disabled: "disabled", id: "id", required: "required", name: "name", step: "step" }, outputs: { rangeValueChange: "rangeValueChange" }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_VALUE_ACCESOR])], decls: 17, vars: 26, consts: [[1, "multi-range-field", "my-5", "pb-5"], [1, "range-field"], ["rangeField", ""], [1, "track"], ["title", "range", 1, "range-cloud", 3, "ngClass"], ["firstRangeCloud", ""], [1, "text-transform"], ["type", "range", 1, "mdbMultiRange", "original", "active", 3, "value", "name", "id", "min", "max", "step", "disabled", "ngModel", "input", "ngModelChange", "touchstart", "touchend", "mousedown", "mouseup", "blur"], ["firstInput", ""], ["secondRangeCloud", ""], ["type", "range", 1, "mdbMultiRange", "original", "ghost", "active", 3, "value", "name", "id", "min", "max", "step", "disabled", "ngModel", "input", "ngModelChange", "touchstart", "touchend", "mousedown", "mouseup", "blur"], ["secondInput", ""]], template: function MdbMultiRangeInputComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1, 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4, 5);
        ɵngcc0.ɵɵelementStart(6, "span", 6);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "input", 7, 8);
        ɵngcc0.ɵɵlistener("input", function MdbMultiRangeInputComponent_Template_input_input_8_listener($event) { return ctx.firstRangeInput($event); })("ngModelChange", function MdbMultiRangeInputComponent_Template_input_ngModelChange_8_listener($event) { return ctx.range.first = $event; })("touchstart", function MdbMultiRangeInputComponent_Template_input_touchstart_8_listener() { return ctx.focusRangeInput("first"); })("touchend", function MdbMultiRangeInputComponent_Template_input_touchend_8_listener() { return ctx.blurRangeInput("first"); })("mousedown", function MdbMultiRangeInputComponent_Template_input_mousedown_8_listener() { return ctx.focusRangeInput("first"); })("mouseup", function MdbMultiRangeInputComponent_Template_input_mouseup_8_listener() { return ctx.blurRangeInput("first"); })("blur", function MdbMultiRangeInputComponent_Template_input_blur_8_listener() { return ctx.blurRangeInput("first"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 3);
        ɵngcc0.ɵɵelementStart(11, "div", 4, 9);
        ɵngcc0.ɵɵelementStart(13, "span", 6);
        ɵngcc0.ɵɵtext(14);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(15, "input", 10, 11);
        ɵngcc0.ɵɵlistener("input", function MdbMultiRangeInputComponent_Template_input_input_15_listener($event) { return ctx.secondRangeInput($event); })("ngModelChange", function MdbMultiRangeInputComponent_Template_input_ngModelChange_15_listener($event) { return ctx.range.second = $event; })("touchstart", function MdbMultiRangeInputComponent_Template_input_touchstart_15_listener() { return ctx.focusRangeInput("second"); })("touchend", function MdbMultiRangeInputComponent_Template_input_touchend_15_listener() { return ctx.blurRangeInput("second"); })("mousedown", function MdbMultiRangeInputComponent_Template_input_mousedown_15_listener() { return ctx.focusRangeInput("second"); })("mouseup", function MdbMultiRangeInputComponent_Template_input_mouseup_15_listener() { return ctx.blurRangeInput("second"); })("blur", function MdbMultiRangeInputComponent_Template_input_blur_15_listener() { return ctx.blurRangeInput("second"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(22, _c5, ctx.firstVisibility));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ctx.range.first);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("value", ctx.value.first)("name", ctx.name)("id", ctx.id)("min", ctx.min)("max", ctx.max)("step", ctx.step)("disabled", ctx.disabled)("ngModel", ctx.range.first);
        ɵngcc0.ɵɵattribute("value", ctx.value.first);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(24, _c5, ctx.secondVisibility));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ctx.range.second);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("value", ctx.value.second)("name", ctx.name)("id", ctx.id)("min", ctx.min)("max", ctx.max)("step", ctx.step)("disabled", ctx.disabled)("ngModel", ctx.range.second);
        ɵngcc0.ɵɵattribute("value", ctx.value.second);
    } }, directives: [ɵngcc1.NgClass, ɵngcc2.RangeValueAccessor, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel], styles: [".range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.range-field input[type=range]:focus{outline:none}.range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;-moz-appearance:none;appearance:none;outline:none}.range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.range-field input[type=range]::-ms-fill-lower,.range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.range-field input[type=range]:focus::-ms-fill-lower,.range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}@supports (--css:variables){input[type=range].mdbMultiRange{padding:0;margin:0;display:inline-block;vertical-align:top;position:absolute;pointer-events:none}input[type=range].mdbMultiRange::-moz-range-thumb{pointer-events:all}input[type=range].mdbMultiRange::-webkit-slider-thumb{pointer-events:all}input[type=range].mdbMultiRange.original{position:absolute}input[type=range].mdbMultiRange.original::-webkit-slider-thumb{position:relative;z-index:2}input[type=range].mdbMultiRange.original::-moz-range-thumb{transform:scale(1);z-index:1}input[type=range].mdbMultiRange.ghost{position:relative}input[type=range].mdbMultiRange.ghost::-moz-range-track{background-color:transparent}}.multi-range-field{position:relative}.multi-range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.multi-range-field input[type=range]:focus{outline:none}.multi-range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.multi-range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.multi-range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.multi-range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.multi-range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.multi-range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.multi-range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;-moz-appearance:none;appearance:none;outline:none}.multi-range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.multi-range-field input[type=range]::-ms-fill-lower,.multi-range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.multi-range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.multi-range-field input[type=range]:focus::-ms-fill-lower,.multi-range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}.thumb-horizontal-wrapper{position:relative;transform:rotate(-270deg);top:500px}.multi-range-field input[type=range]+.thumb-horizontal .value{transform:rotate(315deg)!important}.range-field:focus{box-shadow:none}.range-field:focus::-webkit-slider-thumb{box-shadow:none}.range-field:focus::-moz-range-thumb{box-shadow:none}.range-field:focus::-ms-thumb{box-shadow:none}.range-field::-moz-focus-outer{border:0}.range-field::-webkit-slider-thumb{margin-top:-6px;box-shadow:none;-webkit-appearance:none;appearance:none}.range-field::-webkit-slider-runnable-track{height:4px;border-radius:0}.range-field::-moz-range-thumb{box-shadow:none;-moz-appearance:none;appearance:none}.range-field{position:relative}.range-field .track{position:absolute}.range-field .track .range-cloud{position:absolute;display:block;height:30px;width:30px;top:-32px;margin-left:-15px;text-align:center;border-radius:50% 50% 50% 0;transform:scale(0);transform-origin:bottom;transition:transform .2s ease-in-out}.range-field .track .range-cloud:after{position:absolute;display:block;content:\"\";transform:translateX(-50%);width:100%;height:100%;top:0;border-radius:50% 50% 50% 0;transform:rotate(-45deg);background:#1266f1;z-index:-1}.range-field .track .range-cloud.visible{transform:scale(1)}.range-field .track .range-cloud .text-transform{display:block;font-size:12px;line-height:30px;color:#fff;z-index:2}"], encapsulation: 2, changeDetection: 0 });
MdbMultiRangeInputComponent.ctorParameters = () => [
    { type: Renderer2 }
];
MdbMultiRangeInputComponent.propDecorators = {
    id: [{ type: Input }],
    required: [{ type: Input }],
    name: [{ type: Input }],
    value: [{ type: Input }],
    disabled: [{ type: Input }],
    min: [{ type: Input }],
    max: [{ type: Input }],
    step: [{ type: Input }],
    rangeValueChange: [{ type: Output }],
    firstInput: [{ type: ViewChild, args: ['firstInput', { static: true },] }],
    secondInput: [{ type: ViewChild, args: ['secondInput', { static: true },] }],
    firstRangeCloud: [{ type: ViewChild, args: ['firstRangeCloud', { static: true },] }],
    secondRangeCloud: [{ type: ViewChild, args: ['secondRangeCloud', { static: true },] }],
    rangeField: [{ type: ViewChild, args: ['rangeField', { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MdbMultiRangeInputComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-multi-range-input',
                template: "<div class=\"multi-range-field my-5 pb-5\">\n  <div class=\"range-field\" #rangeField>\n    <div class=\"track\">\n      <div\n        #firstRangeCloud\n        class=\"range-cloud\"\n        title=\"range\"\n        [ngClass]=\"{ visible: this.firstVisibility }\"\n      >\n        <span class=\"text-transform\">{{ range.first }}</span>\n      </div>\n    </div>\n    <input\n      #firstInput\n      [value]=\"value.first\"\n      [attr.value]=\"value.first\"\n      [name]=\"name\"\n      [id]=\"id\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [step]=\"step\"\n      [disabled]=\"disabled\"\n      type=\"range\"\n      class=\"mdbMultiRange original active\"\n      (input)=\"firstRangeInput($event)\"\n      [(ngModel)]=\"range.first\"\n      (touchstart)=\"focusRangeInput('first')\"\n      (touchend)=\"blurRangeInput('first')\"\n      (mousedown)=\"focusRangeInput('first')\"\n      (mouseup)=\"blurRangeInput('first')\"\n      (blur)=\"blurRangeInput('first')\"\n    />\n\n    <div class=\"track\">\n      <div\n        #secondRangeCloud\n        class=\"range-cloud\"\n        title=\"range\"\n        [ngClass]=\"{ visible: this.secondVisibility }\"\n      >\n        <span class=\"text-transform\">{{ range.second }}</span>\n      </div>\n    </div>\n    <input\n      #secondInput\n      [value]=\"value.second\"\n      [attr.value]=\"value.second\"\n      [name]=\"name\"\n      [id]=\"id\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [step]=\"step\"\n      [disabled]=\"disabled\"\n      type=\"range\"\n      class=\"mdbMultiRange original ghost active\"\n      (input)=\"secondRangeInput($event)\"\n      [(ngModel)]=\"range.second\"\n      (touchstart)=\"focusRangeInput('second')\"\n      (touchend)=\"blurRangeInput('second')\"\n      (mousedown)=\"focusRangeInput('second')\"\n      (mouseup)=\"blurRangeInput('second')\"\n      (blur)=\"blurRangeInput('second')\"\n    />\n  </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                providers: [RANGE_VALUE_ACCESOR],
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.range-field input[type=range]:focus{outline:none}.range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;-moz-appearance:none;appearance:none;outline:none}.range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.range-field input[type=range]::-ms-fill-lower,.range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.range-field input[type=range]:focus::-ms-fill-lower,.range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}@supports (--css:variables){input[type=range].mdbMultiRange{padding:0;margin:0;display:inline-block;vertical-align:top;position:absolute;pointer-events:none}input[type=range].mdbMultiRange::-moz-range-thumb{pointer-events:all}input[type=range].mdbMultiRange::-webkit-slider-thumb{pointer-events:all}input[type=range].mdbMultiRange.original{position:absolute}input[type=range].mdbMultiRange.original::-webkit-slider-thumb{position:relative;z-index:2}input[type=range].mdbMultiRange.original::-moz-range-thumb{transform:scale(1);z-index:1}input[type=range].mdbMultiRange.ghost{position:relative}input[type=range].mdbMultiRange.ghost::-moz-range-track{background-color:transparent}}.multi-range-field{position:relative}.multi-range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.multi-range-field input[type=range]:focus{outline:none}.multi-range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.multi-range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.multi-range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.multi-range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.multi-range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.multi-range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.multi-range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;-moz-appearance:none;appearance:none;outline:none}.multi-range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.multi-range-field input[type=range]::-ms-fill-lower,.multi-range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.multi-range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.multi-range-field input[type=range]:focus::-ms-fill-lower,.multi-range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}.thumb-horizontal-wrapper{position:relative;transform:rotate(-270deg);top:500px}.multi-range-field input[type=range]+.thumb-horizontal .value{transform:rotate(315deg)!important}.range-field:focus{box-shadow:none}.range-field:focus::-webkit-slider-thumb{box-shadow:none}.range-field:focus::-moz-range-thumb{box-shadow:none}.range-field:focus::-ms-thumb{box-shadow:none}.range-field::-moz-focus-outer{border:0}.range-field::-webkit-slider-thumb{margin-top:-6px;box-shadow:none;-webkit-appearance:none;appearance:none}.range-field::-webkit-slider-runnable-track{height:4px;border-radius:0}.range-field::-moz-range-thumb{box-shadow:none;-moz-appearance:none;appearance:none}.range-field{position:relative}.range-field .track{position:absolute}.range-field .track .range-cloud{position:absolute;display:block;height:30px;width:30px;top:-32px;margin-left:-15px;text-align:center;border-radius:50% 50% 50% 0;transform:scale(0);transform-origin:bottom;transition:transform .2s ease-in-out}.range-field .track .range-cloud:after{position:absolute;display:block;content:\"\";transform:translateX(-50%);width:100%;height:100%;top:0;border-radius:50% 50% 50% 0;transform:rotate(-45deg);background:#1266f1;z-index:-1}.range-field .track .range-cloud.visible{transform:scale(1)}.range-field .track .range-cloud .text-transform{display:block;font-size:12px;line-height:30px;color:#fff;z-index:2}"]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }]; }, { value: [{
            type: Input
        }], min: [{
            type: Input
        }], max: [{
            type: Input
        }], rangeValueChange: [{
            type: Output
        }], disabled: [{
            type: Input
        }], id: [{
            type: Input
        }], required: [{
            type: Input
        }], name: [{
            type: Input
        }], step: [{
            type: Input
        }], firstInput: [{
            type: ViewChild,
            args: ['firstInput', { static: true }]
        }], secondInput: [{
            type: ViewChild,
            args: ['secondInput', { static: true }]
        }], firstRangeCloud: [{
            type: ViewChild,
            args: ['firstRangeCloud', { static: true }]
        }], secondRangeCloud: [{
            type: ViewChild,
            args: ['secondRangeCloud', { static: true }]
        }], rangeField: [{
            type: ViewChild,
            args: ['rangeField', { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,