import { Component, HostBinding, Input, ElementRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class SlideComponent {
    constructor(el) {
        this.animated = false;
        this.directionNext = false;
        this.directionLeft = false;
        this.directionPrev = false;
        this.directionRight = false;
        /** Wraps element by appropriate CSS classes */
        this.el = null;
        this.el = el;
    }
}
SlideComponent.ɵfac = function SlideComponent_Factory(t) { return new (t || SlideComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SlideComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SlideComponent, selectors: [["mdb-slide"], ["mdb-carousel-item"]], hostVars: 14, hostBindings: function SlideComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("animated", ctx.animated)("carousel-item-next", ctx.directionNext)("carousel-item-left", ctx.directionLeft)("carousel-item-prev", ctx.directionPrev)("carousel-item-right", ctx.directionRight)("carousel-item", ctx.el)("active", ctx.active);
    } }, inputs: { active: "active" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function SlideComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
SlideComponent.ctorParameters = () => [
    { type: ElementRef }
];
SlideComponent.propDecorators = {
    active: [{ type: HostBinding, args: ['class.active',] }, { type: Input }],
    animated: [{ type: HostBinding, args: ['class.animated',] }],
    directionNext: [{ type: HostBinding, args: ['class.carousel-item-next',] }],
    directionLeft: [{ type: HostBinding, args: ['class.carousel-item-left',] }],
    directionPrev: [{ type: HostBinding, args: ['class.carousel-item-prev',] }],
    directionRight: [{ type: HostBinding, args: ['class.carousel-item-right',] }],
    el: [{ type: HostBinding, args: ['class.carousel-item',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SlideComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-slide, mdb-carousel-item',
                template: `
    <ng-content></ng-content>
  `
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { animated: [{
            type: HostBinding,
            args: ['class.animated']
        }], directionNext: [{
            type: HostBinding,
            args: ['class.carousel-item-next']
        }], directionLeft: [{
            type: HostBinding,
            args: ['class.carousel-item-left']
        }], directionPrev: [{
            type: HostBinding,
            args: ['class.carousel-item-prev']
        }], directionRight: [{
            type: HostBinding,
            args: ['class.carousel-item-right']
        }], el: [{
            type: HostBinding,
            args: ['class.carousel-item']
        }], active: [{
            type: HostBinding,
            args: ['class.active']
        }, {
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGUuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy11aWtpdC1wcm8tc3RhbmRhcmQvc3JjL2xpYi9mcmVlL2Nhcm91c2VsL3NsaWRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBUTFFLE1BQU0sT0FBTyxjQUFjO0FBQzNCLElBZUUsWUFBbUIsRUFBYztBQUNuQyxRQVppQyxhQUFRLEdBQUcsS0FBSyxDQUFDO0FBQ2xELFFBQTJDLGtCQUFhLEdBQUcsS0FBSyxDQUFDO0FBQ2pFLFFBQTJDLGtCQUFhLEdBQUcsS0FBSyxDQUFDO0FBQ2pFLFFBQTJDLGtCQUFhLEdBQUcsS0FBSyxDQUFDO0FBQ2pFLFFBQTRDLG1CQUFjLEdBQUcsS0FBSyxDQUFDO0FBQ25FLFFBQUUsK0NBQStDO0FBQ2pELFFBR1MsT0FBRSxHQUFxQixJQUFJLENBQUM7QUFDckMsUUFFSSxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztBQUNqQixJQUFFLENBQUM7QUFDSDswQ0F6QkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSw4QkFBOEIsa0JBQ3hDO0dBQVEsRUFBRSxtQ0FFVCxjQUNGOzs7Ozs2QkFDSTtBQUFDO0FBQ1UsWUFUd0IsVUFBVTtBQUFHO0FBQUc7QUFHdkQscUJBT0UsV0FBVyxTQUFDLGNBQWMsY0FDMUIsS0FBSztBQUNOLHVCQUNDLFdBQVcsU0FBQyxnQkFBZ0I7QUFBTyw0QkFDbkMsV0FBVyxTQUFDLDBCQUEwQjtBQUFPLDRCQUM3QyxXQUFXLFNBQUMsMEJBQTBCO0FBQU8sNEJBQzdDLFdBQVcsU0FBQywwQkFBMEI7QUFBTyw2QkFDN0MsV0FBVyxTQUFDLDJCQUEyQjtBQUFPLGlCQUU5QyxXQUFXLFNBQUMscUJBQXFCO0FBRWpDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbWRiLXNsaWRlLCBtZGItY2Fyb3VzZWwtaXRlbScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBTbGlkZUNvbXBvbmVudCB7XG4gIC8qKiBJcyBjdXJyZW50IHNsaWRlIGFjdGl2ZSAqL1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFjdGl2ZScpXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBhY3RpdmU6IGJvb2xlYW47XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW5pbWF0ZWQnKSBhbmltYXRlZCA9IGZhbHNlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmNhcm91c2VsLWl0ZW0tbmV4dCcpIGRpcmVjdGlvbk5leHQgPSBmYWxzZTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5jYXJvdXNlbC1pdGVtLWxlZnQnKSBkaXJlY3Rpb25MZWZ0ID0gZmFsc2U7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuY2Fyb3VzZWwtaXRlbS1wcmV2JykgZGlyZWN0aW9uUHJldiA9IGZhbHNlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmNhcm91c2VsLWl0ZW0tcmlnaHQnKSBkaXJlY3Rpb25SaWdodCA9IGZhbHNlO1xuICAvKiogV3JhcHMgZWxlbWVudCBieSBhcHByb3ByaWF0ZSBDU1MgY2xhc3NlcyAqL1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmNhcm91c2VsLWl0ZW0nKVxuXG4gIC8qKiBMaW5rIHRvIFBhcmVudChjb250YWluZXItY29sbGVjdGlvbikgY29tcG9uZW50ICovXG4gIHB1YmxpYyBlbDogRWxlbWVudFJlZiB8IGFueSA9IG51bGw7XG5cbiAgcHVibGljIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmKSB7XG4gICAgdGhpcy5lbCA9IGVsO1xuICB9XG59XG4iXX0=