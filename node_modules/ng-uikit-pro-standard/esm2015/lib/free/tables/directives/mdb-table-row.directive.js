import { Directive, Output, EventEmitter, ElementRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class MdbTableRowDirective {
    constructor(el) {
        this.el = el;
        this.rowCreated = new EventEmitter();
        this.rowRemoved = new EventEmitter();
    }
    ngOnInit() {
        this.rowCreated.emit({ created: true, el: this.el.nativeElement });
    }
    ngOnDestroy() {
        this.rowRemoved.emit({ removed: true });
    }
}
MdbTableRowDirective.ɵfac = function MdbTableRowDirective_Factory(t) { return new (t || MdbTableRowDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
MdbTableRowDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MdbTableRowDirective, selectors: [["", "mdbTableRow", ""]], outputs: { rowCreated: "rowCreated", rowRemoved: "rowRemoved" } });
MdbTableRowDirective.ctorParameters = () => [
    { type: ElementRef }
];
MdbTableRowDirective.propDecorators = {
    rowCreated: [{ type: Output }],
    rowRemoved: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MdbTableRowDirective, [{
        type: Directive,
        args: [{
                selector: '[mdbTableRow]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { rowCreated: [{
            type: Output
        }], rowRemoved: [{
            type: Output
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLXRhYmxlLXJvdy5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLXVpa2l0LXByby1zdGFuZGFyZC9zcmMvbGliL2ZyZWUvdGFibGVzL2RpcmVjdGl2ZXMvbWRiLXRhYmxlLXJvdy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFxQixVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBSy9GLE1BQU0sT0FBTyxvQkFBb0I7QUFBRyxJQUtsQyxZQUFvQixFQUFjO0FBQ3BDLFFBRHNCLE9BQUUsR0FBRixFQUFFLENBQVk7QUFBQyxRQUh6QixlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztBQUNqRCxRQUFZLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0FBQ2pELElBRUUsQ0FBQztBQUNILElBQ0UsUUFBUTtBQUNWLFFBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7QUFDdkUsSUFBRSxDQUFDO0FBQ0gsSUFDRSxXQUFXO0FBQ2IsUUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQzVDLElBQUUsQ0FBQztBQUNIO2dEQWxCQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLGVBQWUsY0FDMUI7NExBQ0k7QUFBQztBQUE4QyxZQUxTLFVBQVU7QUFBRztBQUFHO0FBR3RFLHlCQUlKLE1BQU07QUFBSyx5QkFDWCxNQUFNO0FBQUk7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIE9uSW5pdCwgT25EZXN0cm95LCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1ttZGJUYWJsZVJvd10nXG59KVxuZXhwb3J0IGNsYXNzIE1kYlRhYmxlUm93RGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuXG4gIEBPdXRwdXQoKSByb3dDcmVhdGVkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIEBPdXRwdXQoKSByb3dSZW1vdmVkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZikge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5yb3dDcmVhdGVkLmVtaXQoeyBjcmVhdGVkOiB0cnVlLCBlbDogdGhpcy5lbC5uYXRpdmVFbGVtZW50IH0pO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5yb3dSZW1vdmVkLmVtaXQoeyByZW1vdmVkOiB0cnVlIH0pO1xuICB9XG5cbn1cbiJdfQ==