{"version":3,"file":"mdb-table-scroll.directive.d.ts","sources":["../../../../../../projects/ng-uikit-pro-standard/src/lib/free/tables/directives/mdb-table-scroll.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAa,UAAU,EAAE,SAAS,EAAE,MAAM,EAAS,MAAM,eAAe,CAAC;;AAEhF,qBAGa,uBAAwB,YAAW,MAAM;AACtD,IAMc,OAAO,CAAC,QAAQ;AAAE,IAAW,OAAO,CAAC,EAAE;AAAE,IAN5C,OAAO,UAAS;AAC3B,IAAW,SAAS,EAAE,GAAG,CAAQ;AACjC,IACW,OAAO,UAAS;AAC3B,IAAW,QAAQ,EAAE,GAAG,CAAQ;AAChC,gBACsB,QAAQ,EAAE,SAAS,EAAU,EAAE,EAAE,UAAU;AAAG,IAElE,qCAAqC,CAAC,YAAY,EAAE,UAAU;AAC3D,IAKH,uCAAuC,CAAC,YAAY,EAAE,UAAU;AAC7D,IAKH,kDAAkD,CAAC,YAAY,EAAE,UAAU;AACxE,IAMH,QAAQ;;;AACL,CAmBJ;AACD","sourcesContent":["import { Directive, ElementRef, Renderer2, OnInit, Input } from '@angular/core';\n\n@Directive({\n  selector: '[mdbTableScroll]',\n})\nexport class MdbTableScrollDirective implements OnInit {\n  @Input() scrollY = false;\n  @Input() maxHeight: any = null;\n\n  @Input() scrollX = false;\n  @Input() maxWidth: any = null;\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  wrapTableWithVerticalScrollingWrapper(tableWrapper: ElementRef) {\n    this.renderer.setStyle(tableWrapper, 'max-height', this.maxHeight + 'px');\n    this.renderer.setStyle(tableWrapper, 'overflow-y', 'auto');\n    this.renderer.setStyle(tableWrapper, 'display', 'block');\n  }\n\n  wrapTableWithHorizontalScrollingWrapper(tableWrapper: ElementRef) {\n    this.renderer.setStyle(tableWrapper, 'max-width', this.maxWidth + 'px');\n    this.renderer.setStyle(tableWrapper, 'overflow-x', 'auto');\n    this.renderer.setStyle(tableWrapper, 'display', 'block');\n  }\n\n  wrapTableWithHorizontalAndVerticalScrollingWrapper(tableWrapper: ElementRef) {\n    this.renderer.setStyle(tableWrapper, 'max-height', this.maxHeight + 'px');\n    this.renderer.setStyle(tableWrapper, 'max-width', this.maxWidth + 'px');\n    this.renderer.setStyle(tableWrapper, 'overflow-x', 'auto');\n    this.renderer.setStyle(tableWrapper, 'display', 'block');\n  }\n\n  ngOnInit() {\n    const parent = this.el.nativeElement.parentNode;\n    const tableWrapper = this.renderer.createElement('div');\n\n    if (this.scrollY && this.scrollX && this.maxHeight && this.maxWidth) {\n      this.wrapTableWithHorizontalAndVerticalScrollingWrapper(tableWrapper);\n    }\n\n    if (this.scrollY && this.maxHeight) {\n      this.wrapTableWithVerticalScrollingWrapper(tableWrapper);\n    }\n\n    if (this.scrollX && this.maxWidth) {\n      this.wrapTableWithHorizontalScrollingWrapper(tableWrapper);\n    }\n\n    this.renderer.insertBefore(parent, tableWrapper, this.el.nativeElement);\n    this.renderer.removeChild(parent, this.el.nativeElement);\n    this.renderer.appendChild(tableWrapper, this.el.nativeElement);\n  }\n}\n"]}