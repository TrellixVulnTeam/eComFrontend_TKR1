{"version":3,"file":"modalBackdrop.component.d.ts","sources":["../../../../../projects/ng-uikit-pro-standard/src/lib/free/modals/modalBackdrop.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAa,UAAU,EAAE,MAAM,EAAE,SAAS,EAAe,MAAM,eAAe,CAAC;;AAMtF,qBAAa,oBAAoB;AACjC,IAAS,OAAO,UAAQ;AACxB,gBACqB,OAAO,EAAE,oBAAoB;AAAG,CAGpD;AAED,8EAA8E;AAC9E,qBAIa,sBAAuB,YAAW,MAAM;AACrD,IAkC4B,OAAO,EAAE,UAAU;AAAE,IAAO,QAAQ,EAAE,SAAS;AAAE,IAlC/B,iBAAiB,UAAQ;AACvE,IACE,IAAW,UAAU,IAAI,OAAO,CAE/B;AACH,IACE,IAAW,UAAU,CAAC,KAAK,EAAE,OAAO,EAEnC;AACH,IACE,IAAW,OAAO,IAAI,OAAO,CAE5B;AACH,IACE,IAAW,OAAO,CAAC,KAAK,EAAE,OAAO,EAehC;AACH,IACE,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC;AACjC,IAAE,SAAS,CAAC,QAAQ,UAAS;AAC7B,gBAC4B,OAAO,EAAE,UAAU,EAAS,QAAQ,EAAE,SAAS;AAAG,IAE5E,QAAQ,IAAI,IAAI;;;AAAE,CAUnB;AACD","sourcesContent":["import { Component, ElementRef, OnInit, Renderer2, HostBinding } from '@angular/core';\n\nimport { ClassName } from './modal.options';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { Utils } from '../utils/utils.class';\n\nexport class ModalBackdropOptions {\n  public animate = true;\n\n  public constructor(options: ModalBackdropOptions) {\n    Object.assign(this, options);\n  }\n}\n\n/** This component will be added as background layout for modals if enabled */\n@Component({\n  selector: 'mdb-modal-backdrop',\n  template: ``,\n})\nexport class ModalBackdropComponent implements OnInit {\n  @HostBinding('class.modal-backdrop') public classNameBackDrop = true;\n\n  public get isAnimated(): boolean {\n    return this._isAnimated;\n  }\n\n  public set isAnimated(value: boolean) {\n    this._isAnimated = value;\n  }\n\n  public get isShown(): boolean {\n    return this._isShown;\n  }\n\n  public set isShown(value: boolean) {\n    this._isShown = value;\n    if (value) {\n      this.renderer.addClass(this.element.nativeElement, `${ClassName.IN}`);\n\n      if (!isBs3()) {\n        this.renderer.addClass(this.element.nativeElement, `${ClassName.SHOW}`);\n      }\n    } else {\n      this.renderer.removeClass(this.element.nativeElement, `${ClassName.IN}`);\n\n      if (!isBs3()) {\n        this.renderer.removeClass(this.element.nativeElement, `${ClassName.SHOW}`);\n      }\n    }\n  }\n\n  protected _isAnimated: boolean;\n  protected _isShown = false;\n\n  public constructor(public element: ElementRef, public renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this.renderer.addClass(this.element.nativeElement, `${ClassName.FADE}`);\n      Utils.reflow(this.element.nativeElement);\n    } else {\n      this.renderer.addClass(this.element.nativeElement, `${ClassName.FADE}`);\n      Utils.reflow(this.element.nativeElement);\n    }\n    this.isShown = true;\n  }\n}\n"]}