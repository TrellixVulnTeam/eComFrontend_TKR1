{"version":3,"file":"validate.directive.d.ts","sources":["../../../../../projects/ng-uikit-pro-standard/src/lib/free/input-utilities/validate.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAa,UAAU,EAAS,MAAM,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;;AAEhF,qBAGa,oBAAqB,YAAW,MAAM;AACnD,IAkCc,OAAO,CAAC,QAAQ;AAAE,IAAW,OAAO,CAAC,EAAE;AAAE,IAlCrD,OAAO,CAAC,SAAS,CAAQ;AAC3B,IAAE,OAAO,CAAC,gBAAgB,CAAQ;AAClC,IAAE,OAAO,CAAC,cAAc,CAAQ;AAChC,IACW,WAAW,EAAE,OAAO,CAAC;AAChC,IAAE,IACI,QAAQ,IAGQ,OAAO,CAD1B;AACH,IAAE,IAAI,QAAQ,CAAC,KAAK,EAAE,OAAO,EAI1B;AACH,IACE,IACI,eAAe,IAGQ,OAAO,CADjC;AACH,IAAE,IAAI,eAAe,CAAC,KAAK,EAAE,OAAO,EAGjC;AACH,IACE,IACI,aAAa,IAGQ,OAAO,CAD/B;AACH,IAAE,IAAI,aAAa,CAAC,KAAK,EAAE,OAAO,EAI/B;AACH,gBACsB,QAAQ,EAAE,SAAS,EAAU,EAAE,EAAE,UAAU;AAAG,IAElE,kBAAkB;AACf,IAOH,gBAAgB;AACb,IAOH,QAAQ;;;AACL,CAGJ;AACD","sourcesContent":["import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[mdbValidate]',\n})\nexport class MdbValidateDirective implements OnInit {\n  private _validate = true;\n  private _validateSuccess = true;\n  private _validateError = true;\n\n  @Input() mdbValidate: boolean;\n  @Input()\n  get validate() {\n    return this._validate;\n  }\n  set validate(value: boolean) {\n    this._validate = value;\n    this.updateErrorClass();\n    this.updateSuccessClass();\n  }\n\n  @Input()\n  get validateSuccess() {\n    return this._validateSuccess;\n  }\n  set validateSuccess(value: boolean) {\n    this._validateSuccess = value;\n    this.updateSuccessClass();\n  }\n\n  @Input()\n  get validateError() {\n    return this._validateError;\n  }\n  set validateError(value: boolean) {\n    this._validateError = value;\n    this.updateErrorClass();\n    this.updateSuccessClass();\n  }\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  updateSuccessClass() {\n    if (this.validate && this.validateSuccess) {\n      this.renderer.addClass(this.el.nativeElement, 'validate-success');\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, 'validate-success');\n    }\n  }\n\n  updateErrorClass() {\n    if (this.validate && this.validateError) {\n      this.renderer.addClass(this.el.nativeElement, 'validate-error');\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, 'validate-error');\n    }\n  }\n\n  ngOnInit() {\n    this.updateSuccessClass();\n    this.updateErrorClass();\n  }\n}\n"]}