{"version":3,"file":"success.directive.d.ts","sources":["../../../../../projects/ng-uikit-pro-standard/src/lib/free/input-utilities/success.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAGL,UAAU,EACV,SAAS,EACT,MAAM,EACN,SAAS,EAGV,MAAM,eAAe,CAAC;;AAKvB,qBAOa,mBAAoB,YAAW,MAAM,EAAE,SAAS;AAC7D,IAUc,OAAO,CAAC,EAAE;AAAE,IAAY,OAAO,CAAC,QAAQ;AAAE,IAVtD,MAAM,EAAE,WAAW,CAAC;AACtB,IAAW,EAAE,SAAsC;AACnD,IACwC,UAAU,UAAQ;AAC1D,IAA0B,SAAS,SAAW;AAC9C,IACE,sBAAsB,EAAE,QAAQ,CAAC;AACnC,IACE,OAAO,CAAC,KAAK,CAAsB;AACrC,gBACsB,EAAE,EAAE,UAAU,EAAU,QAAQ,EAAE,SAAS;AAAG,IAElE,OAAO,CAAC,mBAAmB;AAAE,IAS7B,QAAQ;AACL,IAmBH,WAAW;;;AACR,CAOJ;AACD","sourcesContent":["import {\n  Input,\n  HostBinding,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Utils } from '../utils';\n\nlet defaultIdNumber = 0;\n\n@Component({\n  selector: 'mdb-success',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['./input-utilities-module.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\n// tslint:disable-next-line:component-class-suffix\nexport class MdbSuccessDirective implements OnInit, OnDestroy {\n  prefix: HTMLElement;\n  @Input() id = `mdb-success-${defaultIdNumber++}`;\n\n  @HostBinding('class.success-message') successMsg = true;\n  @HostBinding('attr.id') messageId = this.id;\n\n  textareaListenFunction: Function;\n\n  private utils: Utils = new Utils();\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  private _calculateMarginTop() {\n    const parent = this.el.nativeElement.parentNode.querySelector('.form-check');\n    const heightParent = parent ? parent.offsetHeight : null;\n    if (heightParent) {\n      const margin = heightParent / 12.5;\n      this.el.nativeElement.style.top = `${heightParent + heightParent / margin}px`;\n    }\n  }\n\n  ngOnInit() {\n    this.prefix = this.el.nativeElement.parentNode.querySelector('.prefix');\n    if (this.prefix) {\n      this.prefix.classList.add('success-message');\n    }\n\n    const textarea = this.utils.getClosestEl(this.el.nativeElement, '.md-textarea');\n\n    this._calculateMarginTop();\n    if (textarea) {\n      let height = textarea.offsetHeight + 4 + 'px';\n      this.renderer.setStyle(this.el.nativeElement, 'top', height);\n\n      this.textareaListenFunction = this.renderer.listen(textarea, 'keyup', () => {\n        height = textarea.offsetHeight + 4 + 'px';\n        this.renderer.setStyle(this.el.nativeElement, 'top', height);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.textareaListenFunction) {\n      this.textareaListenFunction();\n    }\n    if (this.prefix) {\n      this.prefix.classList.remove('success-message');\n    }\n  }\n}\n"]}