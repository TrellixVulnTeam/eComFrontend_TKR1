{"version":3,"file":"waves-effect.directive.d.ts","sources":["../../../../../projects/ng-uikit-pro-standard/src/lib/free/waves/waves-effect.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAa,UAAU,EAAgB,MAAM,eAAe,CAAC;;AACpE,qBAGa,cAAc;AAC3B,IAAqB,EAAE,EAAE,UAAU;AAAE,gBAAhB,EAAE,EAAE,UAAU;AAAG,IAG7B,KAAK,CAAC,KAAK,EAAE,GAAG;AACpB,IAoCH,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG;;;AAClC,CAUJ;AACD","sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\n@Directive({\n  selector: '[mdbWavesEffect]',\n})\nexport class WavesDirective {\n  constructor(public el: ElementRef) {}\n\n  @HostListener('click', ['$event'])\n  public click(event: any) {\n    if (!this.el.nativeElement.classList.contains('disabled')) {\n      const button = this.el.nativeElement;\n      if (!button.classList.contains('waves-effect')) {\n        button.className += ' waves-effect';\n      }\n\n      const xPos = event.clientX - button.getBoundingClientRect().left;\n      const yPos = event.clientY - button.getBoundingClientRect().top;\n\n      const tmp = document.createElement('div');\n      tmp.className += 'waves-ripple waves-rippling';\n      const ripple = button.appendChild(tmp);\n\n      const top = yPos + 'px';\n      const left = xPos + 'px';\n\n      tmp.style.top = top;\n      tmp.style.left = left;\n\n      const scale = 'scale(' + (button.clientWidth / 100) * 3 + ') translate(0,0)';\n\n      // tslint:disable-next-line: deprecation\n      tmp.style.webkitTransform = scale;\n      tmp.style.transform = scale;\n      tmp.style.opacity = '1';\n\n      const duration = 750;\n\n      // tslint:disable-next-line: deprecation\n      tmp.style.webkitTransitionDuration = duration + 'ms';\n      tmp.style.transitionDuration = duration + 'ms';\n\n      this.removeRipple(button, ripple);\n    }\n  }\n\n  removeRipple(button: any, ripple: any) {\n    ripple.classList.remove('waves-rippling');\n\n    setTimeout(() => {\n      ripple.style.opacity = '0';\n\n      setTimeout(() => {\n        button.removeChild(ripple);\n      }, 750);\n    }, 200);\n  }\n}\n"]}