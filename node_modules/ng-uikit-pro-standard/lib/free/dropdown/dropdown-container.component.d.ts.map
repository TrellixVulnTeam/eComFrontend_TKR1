{"version":3,"file":"dropdown-container.component.d.ts","sources":["../../../../../projects/ng-uikit-pro-standard/src/lib/free/dropdown/dropdown-container.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAsC,SAAS,EAAe,MAAM,eAAe,CAAC;AAC3F,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;;AAEnD,qBAca,4BAA6B,YAAW,SAAS;AAC9D,IAWc,OAAO,CAAC,MAAM;AAAE,IAX5B,MAAM,UAAS;AACjB,IACgC,OAAO,SAAW;AAClD,IAAiC,QAAQ,SAAc;AACvD,IACE,IAAI,SAAS,IAAI,MAAM,GAAG,IAAI,CAE7B;AACH,IACE,OAAO,CAAC,aAAa,CAAM;AAC7B,gBACsB,MAAM,EAAE,eAAe;AAAG,IAM9C,WAAW,IAAI,IAAI;;;AAAE,CAGtB;AACD","sourcesContent":["import { ChangeDetectionStrategy, Component, OnDestroy, HostBinding } from '@angular/core';\nimport { BsDropdownState } from './dropdown.state';\n\n@Component({\n  selector: 'mdb-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div\n      [class.dropup]=\"direction === 'up'\"\n      [class.dropdown]=\"direction === 'down'\"\n      [class.show]=\"isOpen\"\n      [class.open]=\"isOpen\"\n    >\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  @HostBinding('style.display') display = 'block';\n  @HostBinding('style.position') position = 'absolute';\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(private _state: BsDropdownState) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n}\n"]}