{"version":3,"file":"mdb-card.component.d.ts","sources":["../../../../../projects/ng-uikit-pro-standard/src/lib/free/cards/mdb-card.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAGL,UAAU,EAEV,MAAM,EACN,SAAS,EAGV,MAAM,eAAe,CAAC;;AAEvB,qBAOa,gBAAiB,YAAW,MAAM;AAC/C,IA2Cc,OAAO,CAAC,GAAG;AAAE,IAAY,OAAO,CAAC,EAAE;AAAE,IA3CxC,KAAK,EAAE,MAAM,CAAC;AACzB,IAAW,OAAO,EAAE,OAAO,CAAC;AAC5B,IAAW,KAAK,EAAE,OAAO,CAAC;AAC1B,IAAW,eAAe,EAAE,MAAM,CAAC;AACnC,IACuC,IAAI,EAAE,UAAU,CAAC;AACxD,IACE,IAAa,QAAQ,CAAC,QAAQ,EAAE,OAAO,EAMtC;AACH,IACE,IAAa,OAAO,CAAC,OAAO,EAAE,OAAO,EAMpC;AACH,IACE,IAAa,IAAI,CAAC,IAAI,EAAE,OAAO,EAM9B;AACH,IACE,IAAa,OAAO,CAAC,KAAK,EAAE,MAAM,EAIjC;AACH,IACE,IAAa,WAAW,CAAC,KAAK,EAAE,MAAM,EAIrC;AACH,gBACsB,GAAG,EAAE,UAAU,EAAU,EAAE,EAAE,SAAS;AAAG,IAE7D,QAAQ;;;AACL,CAgBJ;AACD","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: 'mdb-card',\n  templateUrl: './mdb-card.component.html',\n  styleUrls: ['./cards-module.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MdbCardComponent implements OnInit {\n  @Input() class: string;\n  @Input() cascade: boolean;\n  @Input() wider: boolean;\n  @Input() imageBackground: string;\n\n  @ViewChild('card', { static: true }) card: ElementRef;\n\n  @Input() set narrower(narrower: boolean) {\n    if (narrower) {\n      this._r.addClass(this._el.nativeElement, 'narrower');\n    } else if (!narrower && this._el.nativeElement.classList.contains('narrower')) {\n      this._r.removeClass(this._el.nativeElement, 'narrower');\n    }\n  }\n\n  @Input() set reverse(reverse: boolean) {\n    if (reverse) {\n      this._r.addClass(this._el.nativeElement, 'reverse');\n    } else if (!reverse && this._el.nativeElement.classList.contains('reserse')) {\n      this._r.removeClass(this._el.nativeElement, 'reverse');\n    }\n  }\n\n  @Input() set dark(dark: boolean) {\n    if (dark) {\n      this._r.addClass(this._el.nativeElement, 'card-dark');\n    } else if (!dark && this._el.nativeElement.classList.contains('card-dark')) {\n      this._r.removeClass(this._el.nativeElement, 'card-dark');\n    }\n  }\n\n  @Input() set bgColor(color: string) {\n    if (color) {\n      this._r.addClass(this._el.nativeElement, color);\n    }\n  }\n\n  @Input() set borderColor(color: string) {\n    if (color) {\n      this._r.addClass(this._el.nativeElement, color);\n    }\n  }\n\n  constructor(private _el: ElementRef, private _r: Renderer2) {}\n\n  ngOnInit() {\n    this._r.addClass(this._el.nativeElement, 'card');\n    if (this.cascade) {\n      this._r.addClass(this._el.nativeElement, 'card-cascade');\n    }\n    if (this.wider) {\n      this._r.addClass(this._el.nativeElement, 'wider');\n    }\n    if (this.narrower) {\n      this._r.addClass(this._el.nativeElement, 'narrower');\n    }\n    if (this.class) {\n      this.class.split(' ').forEach((element: any) => {\n        this._r.addClass(this._el.nativeElement, element);\n      });\n    }\n  }\n}\n"]}