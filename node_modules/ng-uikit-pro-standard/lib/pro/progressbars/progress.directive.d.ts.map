{"version":3,"file":"progress.directive.d.ts","sources":["../../../../../projects/ng-uikit-pro-standard/src/lib/pro/progressbars/progress.directive.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;;AAE/C,qBACa,iBAAiB;AAC9B,IAAE,qGAAqG;AACvG,IAAkB,OAAO,EAAE,OAAO,CAAC;AACnC,IACE,8CAA8C;AAChD,IAAE,IAEW,GAAG,IAAI,MAAM,CAEvB;AACH,IACE,IAAW,GAAG,CAAC,CAAC,EAAE,MAAM,EAKvB;AACH,IACwC,QAAQ,UAAQ;AACxD,IACS,IAAI,EAAE,GAAG,EAAE,CAAM;AAC1B,IACE,SAAS,CAAC,IAAI,SAAO;AACvB,IACS,MAAM,CAAC,GAAG,EAAE,YAAY,GAAG,IAAI;AAAE,IAOjC,SAAS,CAAC,GAAG,EAAE,YAAY,GAAG,IAAI;;;AAAE,CAG5C;AACD","sourcesContent":["import { Directive, HostBinding, Input } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\n\n@Directive({ selector: 'mdbProgress, [mdbProgress]' })\nexport class ProgressDirective {\n  /** if `true` changing value of progress bar will be animated (note: not supported by Bootstrap 4) */\n  @Input() public animate: boolean;\n\n  /** maximum total value of progress element */\n  @HostBinding('attr.max')\n  @Input()\n  public get max(): number {\n    return this._max;\n  }\n\n  public set max(v: number) {\n    this._max = v;\n    this.bars.forEach((bar: BarComponent) => {\n      bar.recalculatePercentage();\n    });\n  }\n\n  @HostBinding('class.progress') public addClass = true;\n\n  public bars: any[] = [];\n\n  protected _max = 100;\n\n  public addBar(bar: BarComponent): void {\n    if (!this.animate) {\n      bar.transition = 'none';\n    }\n    this.bars.push(bar);\n  }\n\n  public removeBar(bar: BarComponent): void {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n  }\n}\n"]}