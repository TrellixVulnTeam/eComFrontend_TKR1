{"version":3,"file":"card-reveal.component.d.ts","sources":["../../../../../projects/ng-uikit-pro-standard/src/lib/pro/animated-cards/card-reveal.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,UAAU,EAEV,SAAS,EAIT,iBAAiB,EAEjB,YAAY,EACb,MAAM,eAAe,CAAC;;AAGvB,qBAQa,mBAAmB;AAChC,IAmBc,OAAO,CAAC,EAAE;AAAE,IAAW,OAAO,CAAC,MAAM;AAAE,IAnB1B,UAAU,EAAE,UAAU,CAAC;AAClD,IAA4C,SAAS,EAAE,UAAU,CAAC;AAClE,IAA+C,YAAY,EAAE,UAAU,CAAC;AACxE,IACY,cAAc,EAAE,YAAY,CAAC,GAAG,CAAC,CAA2B;AACxE,IAAY,YAAY,EAAE,YAAY,CAAC,GAAG,CAAC,CAA2B;AACtE,IACS,OAAO,EAAE,GAAG,CAAC;AACtB,IAAS,IAAI,UAAS;AACtB,IAEE,cAAc;AACX,gBAOiB,EAAE,EAAE,SAAS,EAAU,MAAM,EAAE,iBAAiB;AAAG,IAEvE,MAAM;AACH,IAWH,gBAAgB;AACb,IAEH,eAAe;;;AACZ,CAEJ;AACD","sourcesContent":["import {\n  Component,\n  ElementRef,\n  HostListener,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { socialsState } from '../animations/animations.component';\n\n@Component({\n  selector: 'mdb-card-reveal',\n  templateUrl: 'card-reveal.component.html',\n  styleUrls: ['./animated-cards-module.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [socialsState],\n})\nexport class CardRevealComponent {\n  @ViewChild('cardReveal') cardReveal: ElementRef;\n  @ViewChild('cardFront', { static: true }) cardFront: ElementRef;\n  @ViewChild('cardOverflow', { static: true }) cardOverflow: ElementRef;\n\n  @Output() animationStart: EventEmitter<any> = new EventEmitter<any>();\n  @Output() animationEnd: EventEmitter<any> = new EventEmitter<any>();\n\n  public socials: any;\n  public show = false;\n\n  @HostListener('window:resize')\n  onWindowResize() {\n    if (this.cardOverflow && this.cardFront && this.cardReveal) {\n      const height = this.cardFront.nativeElement.offsetHeight;\n      this._r.setStyle(this.cardOverflow.nativeElement, 'height', height + 'px');\n      this._r.setStyle(this.cardReveal.nativeElement.firstElementChild, 'height', height + 'px');\n    }\n  }\n\n  constructor(private _r: Renderer2, private _cdRef: ChangeDetectorRef) {}\n\n  toggle() {\n    this.show = !this.show;\n    this.socials = this.socials === 'active' ? 'inactive' : 'active';\n    setTimeout(() => {\n      const height = this.cardFront.nativeElement.offsetHeight;\n      this._r.setStyle(this.cardOverflow.nativeElement, 'height', height + 'px');\n      if (this.cardReveal) {\n        this._r.setStyle(this.cardReveal.nativeElement.firstElementChild, 'height', height + 'px');\n      }\n    }, 0);\n    this._cdRef.markForCheck();\n  }\n  onAnimationStart() {\n    this.animationStart.emit();\n  }\n  onAnimationDone() {\n    this.animationEnd.emit();\n  }\n}\n"]}