{"version":3,"file":"chart-smallpie.component.d.ts","sources":["../../../../../projects/ng-uikit-pro-standard/src/lib/pro/easy-charts/chart-smallpie.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,UAAU,EACV,MAAM,EACN,SAAS,EACT,aAAa,EAEb,SAAS,EAEV,MAAM,eAAe,CAAC;;AAKvB,qBAKa,qBAAsB,YAAW,MAAM,EAAE,SAAS;AAC/D,IAMW,EAAE,EAAE,UAAU;AACzB,IACI,OAAO,CAAC,EAAE;AAAE,IARL,OAAO,EAAE,GAAG,CAAC;AACxB,IAAW,OAAO,EAAE,GAAG,CAAC;AACxB,IAAE,QAAQ,EAAE,GAAG,CAAC;AAChB,IAAE,SAAS,EAAE,GAAG,CAAS;AACzB,gBAEW,EAAE,EAAE,UAAU,EACA,UAAU,EAAE,MAAM,EAC/B,EAAE,EAAE,SAAS;AACvB,IAoBA,QAAQ;AACL,IAeH,WAAW,CAAC,OAAO,EAAE,aAAa,GAAG,IAAI;;;AAAE,CAK5C;AACD","sourcesContent":["import {\n  Component,\n  ElementRef,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  Input,\n  Renderer2,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID, Inject } from '@angular/core';\ndeclare var EasyPieChart: any;\n\n@Component({\n  selector: 'mdb-easy-pie-chart',\n  template: '<div>Loading</div>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EasyPieChartComponent implements OnInit, OnChanges {\n  @Input() percent: any;\n  @Input() options: any;\n  pieChart: any;\n  isBrowser: any = false;\n\n  constructor(\n    public el: ElementRef,\n    @Inject(PLATFORM_ID) platformId: string,\n    private _r: Renderer2\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n\n    const options = {\n      barColor: '#ef1e25',\n      trackColor: '#f9f9f9',\n      scaleColor: '#dfe0e0',\n      scaleLength: 5,\n      lineCap: 'round',\n      lineWidth: 3,\n      size: 110,\n      rotate: 0,\n      animate: {\n        duration: 1000,\n        enabled: true,\n      },\n    };\n    this.options = Object.assign(options, this.options);\n  }\n\n  ngOnInit() {\n    if (this.isBrowser) {\n      const size = this.options.size;\n      this.el.nativeElement.innerHTML = '';\n      this.pieChart = new EasyPieChart(this.el.nativeElement, this.options);\n      this.pieChart.update(this.percent);\n      // Positioning text in center of chart\n      const percent = document.querySelector('.percent');\n      if (percent) {\n        this._r.setStyle(percent, 'line-height', size + 'px');\n        this._r.setStyle(percent, 'width', size + 'px');\n        this._r.setStyle(percent, 'height', size + 'px');\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes['percent'].isFirstChange()) {\n      this.pieChart.update(this.percent);\n    }\n  }\n}\n"]}